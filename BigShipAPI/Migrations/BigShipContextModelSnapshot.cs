// <auto-generated />
using System;
using JBProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JBProject.Migrations
{
    [DbContext(typeof(BigShipContext))]
    partial class BigShipContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("lpnop")
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JBProject.Models.City", b =>
                {
                    b.Property<int>("Lcityid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("lcityid")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Addedon")
                        .HasColumnName("addedon")
                        .HasColumnType("datetime");

                    b.Property<short?>("Lcountryid")
                        .HasColumnName("lcountryid")
                        .HasColumnType("smallint");

                    b.Property<string>("Lstate")
                        .IsRequired()
                        .HasColumnName("lstate")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("Lstatecode")
                        .HasColumnName("lstatecode")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<short?>("Lstateid")
                        .HasColumnName("lstateid")
                        .HasColumnType("smallint");

                    b.Property<byte>("Ltin")
                        .HasColumnName("ltin")
                        .HasColumnType("tinyint");

                    b.Property<string>("Ltype")
                        .IsRequired()
                        .HasColumnName("ltype")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Lcityid")
                        .HasName("PK__City__E0907D6E18F908AB");

                    b.HasIndex("Lcountryid");

                    b.HasIndex("Lstateid");

                    b.ToTable("City","dbo");
                });

            modelBuilder.Entity("JBProject.Models.Country", b =>
                {
                    b.Property<short>("Lcountryid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("lcountryid")
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Addedon")
                        .HasColumnName("addedon")
                        .HasColumnType("datetime");

                    b.Property<string>("Lcountry")
                        .IsRequired()
                        .HasColumnName("lcountry")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.HasKey("Lcountryid")
                        .HasName("PK__Country__6489F65FA62BE0C8");

                    b.ToTable("Country","dbo");
                });

            modelBuilder.Entity("JBProject.Models.PlanType", b =>
                {
                    b.Property<short>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PlanID")
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("PlanName")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("PlanId")
                        .HasName("PK__PlanType__755C22D7C20AC035");

                    b.HasIndex("PlanName")
                        .IsUnique()
                        .HasName("UQ__PlanType__46E12F9E9A2E9B47");

                    b.ToTable("PlanType","dbo");
                });

            modelBuilder.Entity("JBProject.Models.RoleMaster", b =>
                {
                    b.Property<short>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RoleID")
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("RoleId")
                        .HasName("PK__RoleMast__8AFACE3ACDFB82B6");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("UQ__RoleMast__737584F6188F921D");

                    b.ToTable("RoleMaster","dbo");
                });

            modelBuilder.Entity("JBProject.Models.State", b =>
                {
                    b.Property<short>("Lstateid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("lstateid")
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Addedon")
                        .HasColumnName("addedon")
                        .HasColumnType("datetime");

                    b.Property<short?>("Lcountryid")
                        .HasColumnName("lcountryid")
                        .HasColumnType("smallint");

                    b.Property<string>("Lstate")
                        .IsRequired()
                        .HasColumnName("lstate")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("Lstatecode")
                        .HasColumnName("lstatecode")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<byte>("Ltin")
                        .HasColumnName("ltin")
                        .HasColumnType("tinyint");

                    b.Property<string>("Ltype")
                        .IsRequired()
                        .HasColumnName("ltype")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Lstateid")
                        .HasName("PK__State__8868BBCC77CE0983");

                    b.HasIndex("Lcountryid");

                    b.ToTable("State","dbo");
                });

            modelBuilder.Entity("JBProject.Models.UserBankDetails", b =>
                {
                    b.Property<long>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AccountID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BeneficiaryAccountNo")
                        .IsRequired()
                        .HasColumnName("Beneficiary_AccountNo")
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("BeneficiaryAccountType")
                        .IsRequired()
                        .HasColumnName("Beneficiary_AccountType")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("BeneficiaryName")
                        .IsRequired()
                        .HasColumnName("Beneficiary_Name")
                        .HasColumnType("varchar(80)")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<string>("CancelledCheque")
                        .IsRequired()
                        .HasColumnName("Cancelled_Cheque")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("IfscCode")
                        .IsRequired()
                        .HasColumnName("IFSC_Code")
                        .HasColumnType("varchar(11)")
                        .HasMaxLength(11)
                        .IsUnicode(false);

                    b.Property<bool?>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<long>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("bigint");

                    b.HasKey("AccountId")
                        .HasName("PK__User_Ban__349DA586763060CC");

                    b.HasIndex("UserId");

                    b.ToTable("User_Bank_Details","dbo");
                });

            modelBuilder.Entity("JBProject.Models.UserCompanyDetails", b =>
                {
                    b.Property<long>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CompanyID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BillingAddressCity")
                        .IsRequired()
                        .HasColumnName("BillingAddress_City")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("BillingAddressLine1")
                        .IsRequired()
                        .HasColumnName("BillingAddress_Line1")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("BillingAddressLine2")
                        .HasColumnName("BillingAddress_Line2")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("BillingAddressPhone")
                        .IsRequired()
                        .HasColumnName("BillingAddress_Phone")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("BillingAddressPhoneCountryCode")
                        .HasColumnName("BillingAddress_PhoneCountryCode")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("BillingAddressPinCode")
                        .HasColumnName("BillingAddress_PinCode")
                        .HasColumnType("int");

                    b.Property<string>("BillingAddressState")
                        .IsRequired()
                        .HasColumnName("BillingAddress_State")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("CompanyEmailId")
                        .IsRequired()
                        .HasColumnName("Company_EmailID")
                        .HasColumnType("varchar(320)")
                        .HasMaxLength(320)
                        .IsUnicode(false);

                    b.Property<string>("CompanyGstin")
                        .HasColumnName("Company_GSTIN")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnName("Company_Name")
                        .HasColumnType("varchar(160)")
                        .HasMaxLength(160)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("InvoicePrefix")
                        .HasColumnName("Invoice_Prefix")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceSuffix")
                        .HasColumnName("Invoice_Suffix")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<bool?>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<string>("Logo")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<byte[]>("LogoData")
                        .HasColumnName("Logo_Data")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Signature")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<byte[]>("SignatureData")
                        .HasColumnName("Signature_Data")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<long>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Website")
                        .HasColumnName("website")
                        .HasColumnType("bit");

                    b.Property<string>("WebsiteUrl")
                        .HasColumnName("website_url")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("CompanyId")
                        .HasName("PK__User_Com__2D971C4C1FB71867");

                    b.HasIndex("UserId");

                    b.ToTable("User_Company_Details","dbo");
                });

            modelBuilder.Entity("JBProject.Models.UserInRoles", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserRoleID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedOn")
                        .HasColumnType("datetime");

                    b.Property<short>("RoleId")
                        .HasColumnName("RoleID")
                        .HasColumnType("smallint");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<long>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("bigint");

                    b.HasKey("UserRoleId")
                        .HasName("PK__UserInRo__3D978A55E50B2BF8");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserInRoles","dbo");
                });

            modelBuilder.Entity("JBProject.Models.UserInfo", b =>
                {
                    b.Property<long>("InfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InfoID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<string>("MonthlyShipments")
                        .IsRequired()
                        .HasColumnName("Monthly_Shipments")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("OtherCategory")
                        .IsRequired()
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<string>("ProductCategory")
                        .IsRequired()
                        .HasColumnType("varchar(3000)")
                        .HasMaxLength(3000)
                        .IsUnicode(false);

                    b.Property<string>("SaleMedium")
                        .HasColumnName("sale_medium")
                        .HasColumnType("varchar(5000)")
                        .HasMaxLength(5000)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UserCat")
                        .IsRequired()
                        .HasColumnName("User_Cat")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<long>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("bigint");

                    b.HasKey("InfoId")
                        .HasName("PK__User_Inf__4DEC9D9A4D3F29E0");

                    b.HasIndex("UserId");

                    b.ToTable("User_Info","dbo");
                });

            modelBuilder.Entity("JBProject.Models.UserMaster", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasColumnName("EmailID")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(256)")
                        .HasDefaultValueSql("(N'')")
                        .HasMaxLength(256);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(256)")
                        .HasDefaultValueSql("(N'')")
                        .HasMaxLength(256);

                    b.Property<long?>("MobileNo")
                        .HasColumnType("bigint");

                    b.Property<string>("Otp")
                        .HasColumnName("OTP")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<short>("PlanId")
                        .HasColumnName("PlanID")
                        .HasColumnType("smallint");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<short>("UserTypeId")
                        .HasColumnName("UserTypeID")
                        .HasColumnType("smallint");

                    b.HasKey("UserId")
                        .HasName("PK__UserMast__1788CCACAFF82403");

                    b.HasIndex("EmailId")
                        .IsUnique()
                        .HasName("UQ__UserMast__7ED91AEE6DEB1797");

                    b.HasIndex("PlanId");

                    b.HasIndex("UserTypeId");

                    b.ToTable("UserMaster","dbo");
                });

            modelBuilder.Entity("JBProject.Models.UserType", b =>
                {
                    b.Property<short>("UserTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserTypeID")
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("UserType1")
                        .IsRequired()
                        .HasColumnName("UserType")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("UserTypeId");

                    b.HasIndex("UserType1")
                        .IsUnique()
                        .HasName("UQ__UserType__87E7869178F78539");

                    b.ToTable("UserType","dbo");
                });

            modelBuilder.Entity("JBProject.Models.City", b =>
                {
                    b.HasOne("JBProject.Models.Country", "Lcountry")
                        .WithMany("City")
                        .HasForeignKey("Lcountryid")
                        .HasConstraintName("FK__City__lcountryid__3572E547");

                    b.HasOne("JBProject.Models.State", "LstateNavigation")
                        .WithMany("City")
                        .HasForeignKey("Lstateid")
                        .HasConstraintName("FK__City__lstateid__347EC10E");
                });

            modelBuilder.Entity("JBProject.Models.State", b =>
                {
                    b.HasOne("JBProject.Models.Country", "Lcountry")
                        .WithMany("State")
                        .HasForeignKey("Lcountryid")
                        .HasConstraintName("FK__State__lcountryi__24485945");
                });

            modelBuilder.Entity("JBProject.Models.UserBankDetails", b =>
                {
                    b.HasOne("JBProject.Models.UserMaster", "User")
                        .WithMany("UserBankDetails")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__User_Bank__UserI__253C7D7E")
                        .IsRequired();
                });

            modelBuilder.Entity("JBProject.Models.UserCompanyDetails", b =>
                {
                    b.HasOne("JBProject.Models.UserMaster", "User")
                        .WithMany("UserCompanyDetails")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__User_Comp__UserI__3943762B")
                        .IsRequired();
                });

            modelBuilder.Entity("JBProject.Models.UserInRoles", b =>
                {
                    b.HasOne("JBProject.Models.RoleMaster", "Role")
                        .WithMany("UserInRoles")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__UserInRol__RoleI__2818EA29")
                        .IsRequired();

                    b.HasOne("JBProject.Models.UserMaster", "User")
                        .WithMany("UserInRoles")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserInRol__UserI__290D0E62")
                        .IsRequired();
                });

            modelBuilder.Entity("JBProject.Models.UserInfo", b =>
                {
                    b.HasOne("JBProject.Models.UserMaster", "User")
                        .WithMany("UserInfo")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__User_Info__UserI__3C1FE2D6")
                        .IsRequired();
                });

            modelBuilder.Entity("JBProject.Models.UserMaster", b =>
                {
                    b.HasOne("JBProject.Models.PlanType", "Plan")
                        .WithMany("UserMaster")
                        .HasForeignKey("PlanId")
                        .HasConstraintName("FK__UserMaste__PlanI__2A01329B")
                        .IsRequired();

                    b.HasOne("JBProject.Models.UserType", "UserType")
                        .WithMany("UserMaster")
                        .HasForeignKey("UserTypeId")
                        .HasConstraintName("FK__UserMaste__UserT__2AF556D4")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
